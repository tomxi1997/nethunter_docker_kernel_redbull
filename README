Linux kernel
============

There are several guides for kernel developers and users. These guides can
be rendered in a number of formats, like HTML and PDF. Please read
Documentation/admin-guide/README.rst first.

In order to build the documentation, use ``make htmldocs`` or
``make pdfdocs``.  The formatted documentation can also be read online at:

    https://www.kernel.org/doc/html/latest/

There are various text files in the Documentation/ subdirectory,
several of them using the Restructured Text markup notation.
See Documentation/00-INDEX for a list of what is contained in each file.

Please read the Documentation/process/changes.rst file, as it contains the
requirements for building and running the kernel, and information about
the problems which may result by upgrading your kernel.





如何编译kali_nethunter-docker内核
How to compile the kali_nethunter-docker kernel


环境准备，对于kali或ubuntu/debian
0x01 Environment preparation
For Kali Linux system or (debian/ubuntu)

apt update && apt upgrade -y && apt full-upgrade -y && apt install -y curl wget vim git ccache automake flex lzop bison gperf \
build-essential zip zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev \
libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev \
liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl \
policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc \
libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev \
libgl1-mesa-dev xsltproc unzip device-tree-compiler kmod python3 python3-pip


下载交叉编译工具链和内核
0x02 Download the cross-compilation toolchain and kernel 

cd /root

git clone https://github.com/kdrag0n/proton-clang.git --depth=1

git clone https://github.com/tomxi1997/nethunter_docker_kernel_redbull.git


对内核打补丁
0x03  into the patch（add-rtl88xxau-5.6.4.2-drivers.patch,add-wifi-injection-4.14.patch）

cd nethunter_docker_kernel_redbull

patch -p1 < add-rtl88xxau-5.6.4.2-drivers.patch
patch -p1 < add-wifi-injection-4.14.patch



图形化配置内核（你可以自己配置直到满意或者直接保存（因为这个已经配置好了）
0x04 Graphically configure the kernel (you can configure it yourself until you are satisfied or save it directly (because this is already configured)

chmod +x 1.sh 2.sh

./1.sh

0x05编译内核和内核模块
Compile the kernel and kernel modules

./2.sh

你将在out/arch/arm64/boot得到内核它可能是Image或是image.gz.dtb。在out/lib/module得到内核模块，然后用anykernel3打包内核，享受
You will get the kernel in out/arch/arm64/boot it may be Image or image.gz.dtb.  Get the kernel module in out/lib/module, then package the kernel with anykernel3, enjoy
